@model PagedList.IPagedList<JamesThewDOTcom.Models.Recipe>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

<div class="container">
    <h2>Recipe List</h2>

    @using (Html.BeginForm("Index", "Recipes", FormMethod.Get))
    {
        <div class="input-group mb-3">
            @Html.TextBox("searchString", null, new { @class = "form-control", placeholder = "Tìm kiếm..." })
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="submit">Tìm kiếm</button>
            </div>
        </div>
    }


    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    <table class="table">

        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].RecipeType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Ingredients)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Step1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ImageOfStep1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Step2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ImageOfStep2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Step3)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ImageOfStep3)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Step4)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ImageOfStep4)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Step5)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ImageOfStep5)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Employee.UserName)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RecipeType)
                </td>
                <td>
                    <img src="@(string.IsNullOrEmpty(item.Image) ? "No Image" : Url.Content(item.Image))" alt="" style="max-width: 100px; max-height: 100px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.ActionLink(item.Ingredients, "Index", "Ingredients", new { recipeId = item.RecipeID }, new { @style = "text-decoration: none; color: red; font-weight: bold;" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Step1)
                </td>
                <td>
                    <img src="@(string.IsNullOrEmpty(item.ImageOfStep1) ? "No Image" : Url.Content(item.ImageOfStep1))" alt="" style="max-width: 100px; max-height: 100px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Step2)
                </td>
                <td>
                    <img src="@(string.IsNullOrEmpty(item.ImageOfStep2) ? "No Image" : Url.Content(item.ImageOfStep2))" alt="" style="max-width: 100px; max-height: 100px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Step3)
                </td>
                <td>
                    <img src="@(string.IsNullOrEmpty(item.ImageOfStep3) ? "No Image" : Url.Content(item.ImageOfStep3))" alt="" style="max-width: 100px; max-height: 100px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Step4)
                </td>
                <td>
                    <img src="@(string.IsNullOrEmpty(item.ImageOfStep4) ? "No Image" : Url.Content(item.ImageOfStep4))" alt="" style="max-width: 100px; max-height: 100px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Step5)
                </td>
                <td>
                    <img src="@(string.IsNullOrEmpty(item.ImageOfStep5) ? "No Image" : Url.Content(item.ImageOfStep5))" alt="" style="max-width: 100px; max-height: 100px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Employee.UserName)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.RecipeID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.RecipeID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.RecipeID })
                </td>
            </tr>
        }

    </table>

    <div class="pagination-container">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewBag.searchString }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })
    </div>
</div>

<style>
    .pagination-container {
        margin-top: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .pagination {
        display: flex;
        list-style: none;
        padding: 0;
        margin: 0;
    }

        .pagination li {
            margin: 0 5px;
        }

        .pagination a {
            text-decoration: none;
            padding: 8px 16px;
            border: 1px solid #ccc;
            color: #333;
        }

            .pagination a:hover {
                background-color: #f1f1f1;
            }

        .pagination .disabled a {
            color: #ddd;
            pointer-events: none;
        }
</style>
